  Additional Resources
    This question uses the acgk8s cluster. After logging in to the exam server, switch to the correct context with the command kubectl config use-context acgk8s.

    Each of the objectives represents a task which you will need to complete using the available cluster and server(s). Read each objective carefully and complete the task specified.

    For some objectives, you may need to ssh into other nodes or servers from the exam server. You can do so using the hostname/node name, i.e. ssh acgk8s-worker1.

  Note: You cannot ssh into another node, or use kubectl to connect to the cluster, from any node other than the root node. Once you have completed the necessary tasks on a server, be sure to exit and return to the root node before proceeding.

    If you need to assume root privileges on a server, you can do so with sudo -i.

    You can run the verification script located at /home/cloud_user/verify.sh at any time to check your work!

    Learning Objectives
    0 of 2 completed
    Determine What Is Wrong with the Broken Node
    Something is wrong with one of the nodes in the cluster. Explore the cluster and determine which Node is broken, then save the name of that node to the file /k8s/0004/broken-node.txt.
    Explore the broken Node and determine what is wrong with it.
    Fix the Problem
    Fix the problem with the broken node so that it becomes READY again.


###ANSWER:


  Certified Kubernetes Administrator (CKA): Practice Exam: Part 10
    Introduction
    This lab provides practice scenarios to help prepare you for the Certified Kubernetes Administrator (CKA) Exam. You will be presented with tasks to complete, as well as server(s) and/or an existing Kubernetes cluster to complete them in. You will need to use your knowledge of Kubernetes, to successfully complete the provided tasks, much like you would on the real CKA exam. Good luck!

    Solution
  Log in to the server using the credentials provided:

    ssh cloud_user@<PUBLIC_IP_ADDRESS>
    Determine What Is Wrong with the Broken Node
  Switch to the acgk8s context:
    kubectl config use-context acgk8s
  Check the current status of the nodes:
    kubectl get nodes
  Identify the broken node and save the name to a file named broken-node.txt:
    echo acgk8s-worker2 > /k8s/0004/broken-node.txt
  Attempt to determine the cause of the issue:
    kubectl describe node acgk8s-worker2
    Fix the Problem
  Access the node using ssh:
    ssh acgk8s-worker2
  Check the kubelet log:
    sudo journalctl -u kubelet
    Check the last entry in the log.
  Check the kubelet status:
    sudo systemctl status kubelet
  Enable kubelet:
    sudo systemctl enable kubelet
  Start kubelet:
    sudo systemctl start kubelet
  Verify that kubelet started successfully:
    sudo systemctl status kubelet
  Return to the control plane node:
    exit
  Check the status of the nodes:
    kubectl get nodes
  Check the status of the exam objectives:
    ./verify.sh